// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  username  String
  nickname String?
  password String
  avatar   String?
  desc      String?
  article Article[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String
  content   String?
  cover     String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  description String?
  categoryId Int      @default(1)
  category  Category  @relation(fields: [categoryId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  tags      Tags[]
  views     Int       @default(0)
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String
  description String?
  cover String?
  type  Int? @default(0)
  articles Article[]
  images Images[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Images {
  id       Int      @id @default(autoincrement())
  url      String
  name     String
  categoryId Int @default(1)
  category Category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Seo {
    id       Int      @id @default(autoincrement())
    title    String
    keywords String
    description String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model Tags {
  id       Int      @id @default(autoincrement())
  name     String
  articles Article[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Links {
  id       Int      @id @default(autoincrement())
  name     String
  url      String
  cover     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}